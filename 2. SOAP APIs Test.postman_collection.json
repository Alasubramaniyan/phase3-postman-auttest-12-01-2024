{
	"info": {
		"_postman_id": "61f92b1a-3337-4cd5-8ffd-4e47cddb4ec4",
		"name": "2. SOAP APIs Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32313461",
		"_collection_link": "https://galactic-rocket-170977.postman.co/workspace/Dummy-Test~76a983b7-22c1-4b53-892e-d530f5a3a764/collection/32313461-61f92b1a-3337-4cd5-8ffd-4e47cddb4ec4?action=share&source=collection_link&creator=32313461"
	},
	"item": [
		{
			"name": "Get capital by country code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var xmlresponse = xml2Json(pm.response.text());\r",
							"\r",
							"pm.test(\"Response to have 'soap:Envelope' object\", function () {\r",
							"    pm.expect(xmlresponse).to.have.property('soap:Envelope');\r",
							"    pm.expect(xmlresponse['soap:Envelope']).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test(\"Response to have 'soap:Body' object\", function () {\r",
							"    pm.expect(xmlresponse['soap:Envelope']).to.have.property('soap:Body');\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test(\"Response to have 'm:CapitalCityResponse' object\", function () {\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']).to.have.property('m:CapitalCityResponse');\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']['m:CapitalCityResponse']).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test(\"Response to have 'm:CapitalCityResult' property\", function () {\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']['m:CapitalCityResponse']).to.have.property('m:CapitalCityResult');\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']['m:CapitalCityResponse']['m:CapitalCityResult']).to.be.an('string');\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']['m:CapitalCityResponse']['m:CapitalCityResult']).to.be.eq('New Delhi');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml; charset=utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n    <Body>\r\n        <CapitalCity \txmlns=\"http://www.oorsprong.org/websamples.countryinfo\">\r\n           <sCountryISOCode>IN</sCountryISOCode>\r\n        </CapitalCity>\r\n    </Body>\r\n</Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL",
					"protocol": "http",
					"host": [
						"webservices",
						"oorsprong",
						"org"
					],
					"path": [
						"websamples.countryinfo",
						"CountryInfoService.wso"
					],
					"query": [
						{
							"key": "WSDL",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Number To Word Conversion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var xmlresponse = xml2Json(pm.response.text());\r",
							"\r",
							"pm.test(\"Response to have 'soap:Envelope' object\", function () {\r",
							"    pm.expect(xmlresponse).to.have.property('soap:Envelope');\r",
							"    pm.expect(xmlresponse['soap:Envelope']).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test(\"Response to have 'soap:Body' object\", function () {\r",
							"    pm.expect(xmlresponse['soap:Envelope']).to.have.property('soap:Body');\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test(\"Response to have 'm:NumberToDollarsResponse' object\", function () {\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']).to.have.property('m:NumberToDollarsResponse');\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']['m:NumberToDollarsResponse']).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test(\"Response to have 'm:NumberToDollarsResult' property\", function () {\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']['m:NumberToDollarsResponse']).to.have.property('m:NumberToDollarsResult');\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']['m:NumberToDollarsResponse']['m:NumberToDollarsResult']).to.be.an('string');\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']['m:NumberToDollarsResponse']['m:NumberToDollarsResult']).to.be.eq('one dollar');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml; charset=utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n  <soap:Body>\r\n    <NumberToDollars xmlns=\"http://www.dataaccess.com/webservicesserver/\">\r\n      <dNum>1</dNum>\r\n    </NumberToDollars>\r\n  </soap:Body>\r\n</soap:Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "https://www.dataaccess.com/webservicesserver/NumberConversion.wso",
					"protocol": "https",
					"host": [
						"www",
						"dataaccess",
						"com"
					],
					"path": [
						"webservicesserver",
						"NumberConversion.wso"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Of Country By country code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var xmlresponse = xml2Json(pm.response.text());\r",
							"\r",
							"pm.test(\"Response to have 'soap:Envelope' object\", function () {\r",
							"    pm.expect(xmlresponse).to.have.property('soap:Envelope');\r",
							"    pm.expect(xmlresponse['soap:Envelope']).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test(\"Response to have 'soap:Body' object\", function () {\r",
							"    pm.expect(xmlresponse['soap:Envelope']).to.have.property('soap:Body');\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test(\"Response to have 'm:ListOfCountryNamesByNameResponse' object\", function () {\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']).to.have.property('m:ListOfCountryNamesByNameResponse');\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']['m:ListOfCountryNamesByNameResponse']).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test(\"Response to have 'm:ListOfCountryNamesByNameResult' object\", function () {\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']['m:ListOfCountryNamesByNameResponse']).to.have.property('m:ListOfCountryNamesByNameResult');\r",
							"    pm.expect(xmlresponse['soap:Envelope']['soap:Body']['m:ListOfCountryNamesByNameResponse']['m:ListOfCountryNamesByNameResult']).to.be.an('object');\r",
							"    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml; charset=utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n    <Body>\r\n        <ListOfCountryNamesByName \txmlns=\"http://www.oorsprong.org/websamples.countryinfo\">\r\n          \r\n        </ListOfCountryNamesByName>\r\n    </Body>\r\n</Envelope>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?Content-Type=text/xml; charset=utf-8",
					"protocol": "http",
					"host": [
						"webservices",
						"oorsprong",
						"org"
					],
					"path": [
						"websamples.countryinfo",
						"CountryInfoService.wso"
					],
					"query": [
						{
							"key": "Content-Type",
							"value": "text/xml; charset=utf-8"
						}
					]
				}
			},
			"response": []
		}
	]
}